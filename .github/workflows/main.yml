#.github/workflows/main.yml 
name: CI-ML-Pipeline 
# Déclencheur : s'exécute à chaque push sur la branche main 
on: 
  push: 
    branches: [ main ] 
  workflow_dispatch: # Permet de lancer manuellement le workflow depuis l'interface GitHub 
jobs: 
  train-and-evaluate: 
    # Le type de runner sur lequel le job va s'exécuter 
    runs-on: ubuntu-latest 
 
    steps: 
      # Étape 1: Récupérer le code du dépôt 
      - name: Checkout repository code 
        uses: actions/checkout@v4 
 
      # Étape 2: Configurer l'environnement Python 
      - name: Set up Python 3.9 
        uses: actions/setup-python@v5 
        with: 
          python-version: '3.9' 
 
      # Étape 3: Installer les dépendances 
      - name: Install dependencies 
        run: | 
          python -m pip install --upgrade pip 
          pip install -r requirements.txt 
          # Télécharger les packages NLTK nécessaires pour le prétraitement 
          python -m nltk.downloader stopwords punkt wordnet 
 
      # Étape 4: Exécuter le pipeline de données et de ML 
      - name: Run Data and ML Pipeline 
        run: | 
          python src/load_data.py 
          python src/preprocess.py 
          python src/train.py # La version avec MLflow 
          python src/evaluate.py 
      # Étape 5: Sauvegarder les résultats MLflow comme un artefact 
      - name: Upload MLflow results 
        uses: actions/upload-artifact@v4 
        with: 
          # Nom de l'artefact qui apparaîtra sur GitHub 
          name: mlflow-results 
          # Chemin du répertoire à sauvegarder 
          path: mlruns/ 
